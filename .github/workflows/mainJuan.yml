name: Azure Continuous Delivery

on:
  workflow_dispatch:
    inputs:
      IMAGE_REPOSITORY:
        description: 'Repository of the image (same as declared in App Service creation)'
        required: true
        default: 'api-vise'
      IMAGE_TAG:
        description: 'Tag of the image'
        required: true
        default: 'latest'
      AZURE_WEBAPP_NAME:
        description: 'Nombre del App Service creado en Azure'
        required: true
      PORT:
        description: 'Port of the application'
        required: true
        default: '443'

jobs:
  build-and-push-image:
    name: Build and Push to ACR
    runs-on: ubuntu-latest
    env:
      ACR_HOST: juanmartinez.azurecr.io
      IMAGE_FULL: juanmartinez.azurecr.io/${{ github.event.inputs.IMAGE_REPOSITORY }}:${{ github.event.inputs.IMAGE_TAG }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker Login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: juanmartinez.azurecr.io
          username: juanmartinez
          password: ${{ secrets.ACR_PASSWORD_JUAN }}

      - name: Build and Push to ACR
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ env.IMAGE_FULL }}

  deploy:
    name: Deploy remote container to Azure
    runs-on: ubuntu-latest
    needs: build-and-push-image
    env:
      IMAGE_FULL: juanmartinez.azurecr.io/${{ github.event.inputs.IMAGE_REPOSITORY }}:${{ github.event.inputs.IMAGE_TAG }}
    steps:
      - name: Deploy to Azure Web App for Containers
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ github.event.inputs.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_JUAN }}
          images: ${{ env.IMAGE_FULL }}

  test-deploy:
    name: Test deployed service
    runs-on: ubuntu-latest
    needs: [build-and-push-image, deploy]
    steps:
      - name: Checkout session.hurl
        uses: actions/checkout@v3
        with:
          sparse-checkout: |
            session.hurl
          sparse-checkout-cone-mode: false

      - name: Setup hurl (API testing tool)
        uses: gacts/install-hurl@v1

      - name: Test API with hurl
        run: |
          hurl --variable host=https://${{ github.event.inputs.AZURE_WEBAPP_NAME }}.azurewebsites.net:${{ github.event.inputs.PORT }} \
               --connect-timeout 20s --error-format long --verbose --test session.hurl
